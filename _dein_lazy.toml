[[plugins]]
repo = 'Shougo/neocomplete.vim'
on_i = 1 # インサートモードに入ったら起動
hook_source = '''
" Disable AutoComplPop.
let g:acp_enableAtStartup = 0
" 起動時に有効化
let g:neocomplete#enable_at_startup = 1
" Use SmartCase
let g:neocomplete#enable_smart_case = 1
" Set minimum syntax keyword length.
let g:neocomplete#sources#syntax#min_keyword_length = 2
let g:neocomplete#auto_completion_start_length = 2
let g:neocomplete#skip_auto_completion_time = ''
let g:neocomplete#lock_buffer_name_pattern = '\*ku\*'

" Define dictionary.
let g:neocomplete#sources#dictionary#dictionaries = {
    \ 'default' : '',
    \ 'vimshell' : $HOME.'/.vimshell_hist',
    \ 'scheme' : $HOME.'/.gosh_completions',
    \ 'php' : $HOME.'/.vim/dict/php.dict',
    \ 'js' : $HOME.'/.vim/dict/js.dict',
    \ 'ruby' : $HOME.'/.vim/dict/ruby.dict'
    \ }

" Define keyword.
if !exists('g:neocomplete#keyword_patterns')
  let g:neocomplete#keyword_patterns = {}
endif
let g:neocomplete#keyword_patterns['default'] = '\h\w*'
let g:neocomplete#keyword_patterns['perl'] = '\h\w*->\h\w*\|\h\w*::\w*'
let g:neocomplete#keyword_patterns['gosh-repl'] = "[[:alpha:]+*/@$_=.!?-][[:alnum:]+*/@$_:=.!?-]*"
'''

# スニペット
[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
hook_source = '''
let g:neosnippet#enable_snipmate_compatibility = 1
" Plugin key-mappings.
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]] # カーソル位置のコンテキストのfiletypeを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # Emmet
repo = 'mattn/emmet-vim'
on_i = 1
hook_source = '''
let g:user_emmet_leader_key='<C-e>'
let g:user_emmet_settings = {
\   'variables': {
\       'lang': "ja"
\   }
\ }
'''

###########################################
# シンタックス
###########################################

[[plugins]] # TOMLシンタックス
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # HTML5
repo = 'othree/html5.vim'
on_ft = 'html'

[[plugins]] # CSS3
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]] # javascript
repo = 'jelera/vim-javascript-syntax'
on_ft = 'javascript'

[[plugins]] # ES6
repo = 'othree/yajs.vim'
on_ft = 'javascript'

[[plugins]] # ejs
repo = 'nikvdp/ejs-syntax'
on_ft = 'ejs'

[[plugins]] # Smarty
repo = 'vim-scripts/smarty-syntax'

[[plugins]] # twig
repo = 'beyondwords/vim-twig'
# repo = 'evidens/vim-twig'
on_ft = 'twig'

[[plugins]] # pug
repo = 'digitaltoad/vim-pug'
on_ft = 'pug'

